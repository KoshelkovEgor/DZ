{\rtf1\ansi\ansicpg1251\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Bold;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red252\green95\blue163;\red255\green255\blue255;
\red208\green168\blue255;\red252\green106\blue93;\red208\green191\blue105;}
{\*\expandedcolortbl;;\csgray\c0\c0;\cssrgb\c100000\c47843\c69804;\cssrgb\c100000\c100000\c100000\c85000;
\cssrgb\c85490\c72941\c100000;\cssrgb\c100000\c50588\c43922;\cssrgb\c85098\c78824\c48627;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb2 \
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f1\b \cf3 struct
\f2\b0 \cf4  queuer<Element: \cf5 Comparable\cf4 > \{
\f0 \cf0 \

\f2 \cf4     
\f0 \cf0 \

\f2 \cf4     
\f1\b \cf3 var
\f2\b0 \cf4  items = [Element]()
\f0 \cf0 \

\f2 \cf4     
\f0 \cf0 \

\f2 \cf4     
\f1\b \cf3 mutating
\f2\b0 \cf4  
\f1\b \cf3 func
\f2\b0 \cf4  add (
\f1\b \cf3 _
\f2\b0 \cf4  item: \cf5 Element\cf4 ) \{
\f0 \cf0 \

\f2 \cf4         items.append(item)
\f0 \cf0 \

\f2 \cf4     \}
\f0 \cf0 \

\f2 \cf4     
\f0 \cf0 \

\f2 \cf4     
\f1\b \cf3 mutating
\f2\b0 \cf4  
\f1\b \cf3 func
\f2\b0 \cf4  next() -> \cf5 Element\cf4  \{
\f0 \cf0 \

\f2 \cf4         print(\cf6 "Next queue \cf4 \\(items.first!)\cf6 "\cf4 )
\f0 \cf0 \

\f2 \cf4         
\f1\b \cf3 return
\f2\b0 \cf4  items.removeFirst()
\f0 \cf0 \

\f2 \cf4     \}
\f0 \cf0 \

\f2 \cf4     
\f0 \cf0 \

\f2 \cf4     
\f1\b \cf3 func
\f2\b0 \cf4  filter(item: \cf5 Element\cf4 ) \{
\f0 \cf0 \

\f2 \cf4         print(\cf6 "Find \cf4 \\(items.filter\{$0 == item\})\cf6 "\cf4 )
\f0 \cf0 \

\f2 \cf4     \}
\f0 \cf0 \

\f2 \cf4     
\f0 \cf0 \

\f2 \cf4     
\f1\b \cf3 mutating
\f2\b0 \cf4  
\f1\b \cf3 func
\f2\b0 \cf4  propertySort() -> [\cf5 Element\cf4 ] \{
\f0 \cf0 \

\f2 \cf4         
\f1\b \cf3 return
\f2\b0 \cf4  items.sorted(by: >)
\f0 \cf0 \

\f2 \cf4     \}
\f0 \cf0 \

\f2 \cf4     
\f0 \cf0 \

\f2 \cf4     
\f1\b \cf3 subscript
\f2\b0 \cf4  (index: \cf5 Int\cf4 ) -> \cf5 Element\cf4 ? \{
\f0 \cf0 \

\f2 \cf4         index < items.count ? items[index]: 
\f1\b \cf3 nil
\f0\b0 \cf0 \

\f2 \cf4     \}
\f0 \cf0 \

\f2 \cf4     
\f0 \cf0 \

\f2 \cf4     
\f1\b \cf3 func
\f2\b0 \cf4  printCount()\{
\f0 \cf0 \

\f2 \cf4         print(items.count)
\f0 \cf0 \

\f2 \cf4     \}
\f0 \cf0 \

\f2 \cf4 \}
\f0 \cf0 \
\
\

\f1\b \cf3 var
\f2\b0 \cf4  round = queuer<\cf5 String\cf4 >(items:[\cf6 "Nik"\cf4 ])
\f0 \cf0 \

\f2 \cf4 round.add(\cf6 "Bob"\cf4 )
\f0 \cf0 \

\f2 \cf4 round.add(\cf6 "Kris"\cf4 )
\f0 \cf0 \

\f2 \cf4 round.add(\cf6 "Bil"\cf4 )
\f0 \cf0 \

\f2 \cf4 round.add(\cf6 "Bil"\cf4 )
\f0 \cf0 \

\f2 \cf4 print(round.items)
\f0 \cf0 \

\f2 \cf4 print(\cf6 "\uc0\u1054 \u1090 \u1089 \u1086 \u1088 \u1090 \u1080 \u1088 \u1086 \u1074 \u1072 \u1085 \u1085 \u1099 \u1081 : \cf4 \\(round.propertySort())\cf6 "\cf4 )
\f0 \cf0 \
\

\f2 \cf4 round.next()
\f0 \cf0 \

\f2 \cf4 round.next()
\f0 \cf0 \

\f2 \cf4 round.add(\cf6 "Mikle"\cf4 )
\f0 \cf0 \

\f2 \cf4 print(round)
\f0 \cf0 \

\f2 \cf4 round.filter(item: \cf6 "Bil"\cf4 )
\f0 \cf0 \

\f2 \cf4 round.printCount()
\f0 \cf0 \
\

\f2 \cf4 print(round)
\f0 \cf0 \

\f2 \cf4 print(round[\cf7 3\cf4 ])
\f0 \cf0 \

\f2 \cf4 print(round[\cf7 1\cf4 ])
\f0 \cf0 \
\
\
\
\
\
\
}